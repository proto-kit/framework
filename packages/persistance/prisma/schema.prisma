// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // Enable after upgrade to 5.9.0
  // previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model State {
  path   Decimal @db.Decimal(78, 0)
  values Decimal[] @db.Decimal(78, 0)
  mask   String @db.VarChar(256)

  @@id([path, mask])
}

model Transaction {
  hash String @id

  methodId String
  sender String
  nonce String
  argsFields String[]
  auxiliaryData String[]
  signature_r String
  signature_s String

  isMessage Boolean

  executionResult TransactionExecutionResult?

  IncomingMessageBatchTransaction IncomingMessageBatchTransaction[]
}

model TransactionExecutionResult {
  stateTransitions Json @db.Json
  protocolTransitions Json @db.Json
  status Boolean
  statusMessage String?
  events Json @db.Json

  tx Transaction @relation(fields: [txHash], references: [hash])
  txHash String @id

  block Block @relation(fields: [blockHash], references: [hash])
  blockHash String
}

model Block {
  hash String @id

  transactionsHash String
  beforeNetworkState Json @db.Json
  duringNetworkState Json @db.Json
  height Int
  fromEternalTransactionsHash String
  toEternalTransactionsHash String
  fromBlockHashRoot String
  fromMessagesHash String
  toMessagesHash String

  parentHash String? @unique
  parent Block? @relation("Parent", fields: [parentHash], references: [hash])
  successor Block? @relation("Parent")

  transactions TransactionExecutionResult[]
  result BlockResult?

  batch Batch? @relation(fields: [batchHeight], references: [height])
  batchHeight Int?
}

model Batch {
  height Int @id

  proof Json @db.Json

  blocks Block[]

  settlementTransactionHash String?
  settlement Settlement? @relation(fields: [settlementTransactionHash], references: [transactionHash])
}

model BlockResult {
  blockHash String @id @unique

  stateRoot String
  blockHashRoot String
  afterNetworkState Json @db.Json
  blockStateTransitions Json @db.Json
  blockHashWitness Json @db.Json

  block Block? @relation(fields: [blockHash], references: [hash])
}

model Settlement {
  // transaction String
  transactionHash String @id
  promisedMessagesHash String

  batches Batch[]
}

model IncomingMessageBatchTransaction {
  transactionHash String
  transaction Transaction @relation(fields: [transactionHash], references: [hash])

  batchId Int
  batch IncomingMessageBatch @relation(fields: [batchId], references: [id])

  @@id([transactionHash, batchId])
}

model IncomingMessageBatch {
  id Int @id @default(autoincrement())

  fromMessageHash String
  toMessageHash String

  messages IncomingMessageBatchTransaction[]
}