{
  "extends": ["hardcore", "hardcore/ts", "hardcore/jest"],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint"],
  "root": true,
  "parserOptions": {
    "project": ["./tsconfig.json"]
  },
  "ignorePatterns": [
    "jest.config.cjs",
    "jest-stackblitz.config.cjs",
    "docs/*",
    "*.json"
  ],
  "rules": {
    "@typescript-eslint/quotes": ["error", "double"],
    "@typescript-eslint/parameter-properties": [
      "error",
      {
        "allow": ["public", "private", "private readonly", "public readonly", "protected", "protected readonly"]
      }
    ],
    "jest/no-hooks": [
      "error",
      {
        "allow": ["beforeEach", "afterEach", "beforeAll", "afterAll"]
      }
    ],
    "@typescript-eslint/consistent-indexed-object-style": "off",
    "import/no-extraneous-dependencies": [
      "error",
      { "peerDependencies": true }
    ],
    "new-cap": [
      "error",
      {
        "capIsNewExceptions": [
          "Field",
          "Bool",
          "Struct",
          "ZkProgram",
          "Memoize",
          "Proof"
        ]
      }
    ],
    "@typescript-eslint/prefer-readonly-parameter-types": "off",
    "id-length": [
      "error",
      {
        "min": 2,
        "exceptions": ["i", "j", "x", "a", "b"]
      }
    ],
    "import/prefer-default-export": "off",
    "@typescript-eslint/consistent-type-definitions": "off",
    "max-classes-per-file": ["error", 3],
    "max-statements": ["error", 20],
    "@typescript-eslint/no-magic-numbers": [
      "error",
      {
        "ignore": [0, 1, 2, 10, 100, 1000, -1],
        "ignoreArrayIndexes": true,
        "ignoreTypeIndexes": true
      }
    ],
    "no-param-reassign": "off", //It makes a lot of sense to do this for primitive types since they are pass-by-value
    "no-plusplus": [
      "error",
      {
        "allowForLoopAfterthoughts": true
      }
    ],
    "import/exports-last": "off",
    "max-params": ["error", 6],
    "decorator-position/decorator-position": [
      "error",
      {
        "methods": "above",
        "properties": "prefer-inline",
        "overrides": {
          "above": ["@Field", "@InputType", "@IsNumberString"]
        }
      }
    ],
    "@typescript-eslint/require-await": "off", //Doesn't work when having async interfaces
    "@typescript-eslint/no-explicit-any": [
      "error",
      {
        "ignoreRestArgs": true
      }
    ],
    "unicorn/no-negated-condition": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["camelCase"],
        "prefix": []
      }
    ],

    //Stuff to be considered to be enabled for prod
    "etc/no-commented-out-code": "off", //Check in PR with CI before merging
    "no-console": "off",
    "@typescript-eslint/consistent-type-imports": "off",

    //I could live with this enabled
    "import/no-anonymous-default-export": "off", //Enabled export default {} in index.ts
    "@typescript-eslint/method-signature-style": ["error", "property"],
    "lines-around-comment": "off",
    "@typescript-eslint/lines-around-comment": [
      "error",
      {
        "allowInterfaceStart": true,
        "allowTypeStart": true,
        "allowModuleStart": true,
        "allowEnumStart": true,
        "allowBlockStart": true
      }
    ],
    "@typescript-eslint/prefer-function-type": "off",
    "no-bitwise": [
      "error",
      {
        "allow": ["<<", ">>", ">>>"]
      }
    ],
    "@typescript-eslint/no-unnecessary-condition": [
      "off"
    ],
    "nodejs/declare": "off",
    "unicorn/prefer-event-target": "off"
  },

  "overrides": [
    {
      "files": ["*.test.ts"],
      "rules": {
        "@typescript-eslint/no-misused-promises": "off", //shutdown promise timeout - can be removed with snarkyjs 0.10
        "@typescript-eslint/init-declarations": "off", //conflicts with beforeEach initialization
        "unicorn/consistent-function-scoping": "off", //Describe-level functions
        "@typescript-eslint/no-magic-numbers": "off",
        "jest/no-disabled-tests": "off" //For now
      }
    },
    {
      "files": ["index.ts"],
      "rules": {
        "import/no-anonymous-default-export": "off"
      }
    }
  ]
}
